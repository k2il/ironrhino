<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<!-- commented by zhouyanming
			<bean id="messageSource"
			class="org.springframework.context.support.ResourceBundleMessageSource"
			p:basename="messages" />
		-->

	<!-- ID Generators -->
	<bean id="ticketGrantingTicketUniqueIdGenerator"
		class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg index="0" value="50" />
	</bean>

	<bean id="servicesManager"
		class="org.jasig.cas.services.DefaultServicesManagerImpl">
		<constructor-arg index="0" ref="serviceRegistryDao" />
	</bean>

	<!-- commented by zhouyanming
			<bean id="attributeRegistry"
			class="org.jasig.cas.services.LdapAttributeRepository">
			<constructor-arg index="0" value="uid=battags,ou=people" />
			<constructor-arg index="1"
			value="ldap://ldap.rutgers.edu:389/dc=rutgers,dc=edu" />
			</bean>
		-->

	<bean id="serviceRegistryDao"
		class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl" />

	<bean id="casHttpClient" class="org.jasig.cas.util.HttpClient"
		p:readTimeout="5000" p:connectionTimeout="5000" />

	<bean id="serviceTicketUniqueIdGenerator"
		class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg index="0" value="20" />
	</bean>

	<!-- commented by zhouyanming
			<bean id="samlServiceTicketUniqueIdGenerator"
			class="org.jasig.cas.util.SamlCompliantUniqueTicketIdGenerator">
			<constructor-arg index="0" value="https://localhost:8443" />
			</bean>
		-->

	<!-- Expiration policies -->
	<bean id="serviceTicketExpirationPolicy"
		class="org.jasig.cas.ticket.support.MultiTimeUseOrTimeoutExpirationPolicy">
		<!-- This argument is the number of times that a ticket can be used before its considered expired. -->
		<constructor-arg index="0" value="1" />

		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg index="1" value="300000" />
	</bean>

	<bean id="grantingTicketExpirationPolicy"
		class="org.jasig.cas.ticket.support.TimeoutExpirationPolicy">
		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg index="0" value="7200000" />
	</bean>

	<bean id="persistentIdGenerator"
		class="org.jasig.cas.authentication.principal.ShibbolethCompatiblePersistentIdGenerator"
		p:salt="casrocks" />

	<!-- CentralAuthenticationService -->
	<bean id="centralAuthenticationService"
		class="org.jasig.cas.CentralAuthenticationServiceImpl"
		p:ticketGrantingTicketExpirationPolicy-ref="grantingTicketExpirationPolicy"
		p:serviceTicketExpirationPolicy-ref="serviceTicketExpirationPolicy"
		p:authenticationManager-ref="casAuthenticationManager"
		p:ticketGrantingTicketUniqueTicketIdGenerator-ref="ticketGrantingTicketUniqueIdGenerator"
		p:ticketRegistry-ref="ticketRegistry"
		p:servicesManager-ref="servicesManager"
		p:persistentIdGenerator-ref="persistentIdGenerator">
		<property name="uniqueTicketIdGeneratorsForService">
			<map>
				<entry
					key="org.jasig.cas.authentication.principal.SimpleWebApplicationServiceImpl"
					value-ref="serviceTicketUniqueIdGenerator" />
				<entry
					key="org.jasig.cas.authentication.principal.OpenIdService"
					value-ref="serviceTicketUniqueIdGenerator" />
				<!-- commented by zhouyanming
						<entry
						key="org.jasig.cas.authentication.principal.SamlService"
						value-ref="samlServiceTicketUniqueIdGenerator" />
					-->
			</map>
		</property>
	</bean>

	<bean id="casAuthenticationManager"
		class="org.jasig.cas.authentication.AuthenticationManagerImpl">
		<property name="credentialsToPrincipalResolvers">
			<list>
				<bean
					class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver" />
				<bean
					class="org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver" />
			</list>
		</property>

		<property name="authenticationHandlers">
			<list>
				<bean
					class="org.ironrhino.ums.service.CasAuthenticationHandler">
					<property name="userManager" ref="userManager" />
				</bean>
				<bean
					class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler">
					<property name="httpClient" ref="casHttpClient" />
				</bean>
			</list>
		</property>
	</bean>


	<bean id="proxy10Handler"
		class="org.jasig.cas.ticket.proxy.support.Cas10ProxyHandler" />

	<bean id="proxy20Handler"
		class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler"
		p:httpClient-ref="casHttpClient" />

	<!-- Ticket Registry -->
	<bean id="ticketRegistry"
		class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />

	<!--Quartz -->
	<!-- TICKET REGISTRY CLEANER -->
	<bean id="ticketRegistryCleaner"
		class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner"
		p:ticketRegistry-ref="ticketRegistry" />

	<bean id="triggerJobDetailTicketRegistryCleaner"
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<bean
				class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject"
					ref="ticketRegistryCleaner" />
				<property name="targetMethod" value="clean" />
			</bean>
		</property>
		<property name="startDelay" value="20000" />
		<property name="repeatInterval" value="5000000" />
	</bean>
	<!-- ADVISORS -->
	<!-- commented by zhouyanming
			<bean id="advisorAutoProxyCreator"
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

			<bean id="notNullAnnotationBeanPostProcessor"
			class="org.jasig.cas.util.annotation.NotNullAnnotationBeanPostProcessor" />

			<bean id="greaterThanAnnotationBeanPostProcessor"
			class="org.jasig.cas.util.annotation.GreaterThanAnnotationBeanPostProcessor" />

			<bean id="notEmptyAnnotationBeanPostProcessor"
			class="org.jasig.cas.util.annotation.NotEmptyAnnotationBeanPostProcessor" />

			<bean id="isInAnnotationBeanPostProcessor"
			class="org.jasig.cas.util.annotation.IsInAnnotationBeanPostProcessor" />
		-->
</beans>
