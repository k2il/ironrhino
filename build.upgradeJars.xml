<?xml version="1.0" encoding="utf-8"?>
<project name="ironrhino-upgradeJars" default="upgradeJars" basedir=".">
	<target name="upgradeJars">
		<script language="javascript">
			<![CDATA[
			importPackage(java.io);
			var classpathfile = new File(project.getProperty('basedir')+'/.classpath');
			var is = new FileInputStream(classpathfile);
			var br = new BufferedReader(new InputStreamReader(is,'utf-8'));
			var lines = [];
			var line;
			while(line=br.readLine()){
				if(line.indexOf('kind="lib"') < 0)
					continue;
				lines.push(line);	
			}
			br.close();
			is.close();
			var replacement = [];
			for(var n=0;n<lines.length;n++){
				var arr = lines[n].split('"');
				var path = arr[arr.length-2];
				var arr2 = path.split('/');
				var filename = arr2[arr2.length-1];
				var jarname = filename.substring(0,filename.lastIndexOf(filename.lastIndexOf('-')>0?'-':'.'));
				var version = filename.substring(jarname.length()+1);
				var file = new File(basedir+'/' + path);
        		var parent = file.getParentFile();
        		var files = parent.listFiles();
        		for(var i=0;i<files.length;i++){
        			var f = files[i];
        			var filename2 = f.getName();
        			var jarname2 = filename2.substring(0,filename2.lastIndexOf(filename2.lastIndexOf('-')>0?'-':'.'));
        			var version2 = filename2.substring(jarname2.length()+1);
        			if(f.isFile() && jarname == jarname2){
        				if(version.length() >= version2.length() && version >= version2)
        					continue;
        				println('upgrade jar from '+filename+' to '+filename2);
        				if(file.exists()){
	        					var del = project.createTask("delete");
	        					del.setFile(file);
	        					del.perform();
        				}
        				replacement.push(filename);
        				replacement.push(f.getName());
        				break;
        			}
        		}

			}
			for(var i=0;i<replacement.length;i+=2){
				var replace = project.createTask("replace");
				replace.setFile(classpathfile);
				replace.setToken(replacement[i]);
				replace.setValue(replacement[i+1]);
				replace.perform();
			}
			]]>
		</script>
	</target>
</project>
